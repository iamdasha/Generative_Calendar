{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Documents/Generative_Calendar/app/javascript/prototypes/prototype_15/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as melodySettings from './tunes/melody.js';\nimport * as drumsSettings from './tunes/drums.js';\nimport ToneSynth from './modules/ToneSynth.jsx';\nimport Channel from './modules/Channel.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nvar bassSynth;\nvar bassChorus;\nvar bassPingPongDelay;\nvar melodySynth;\nvar melodyChorus;\nvar melodyPingPongDelay;\nvar melodyDistortion;\nvar melodyFreeverb;\nvar samplerChannel;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          bassSettings = _this$state.bassSettings,\n          melodySettings = _this$state.melodySettings,\n          drumsSettings = _this$state.drumsSettings; //\n      //\n\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassChorus = new Tone.Chorus(bassSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassPingPongDelay);\n      var bassPart = new Tone.Part(function (time, note) {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = true; //\n      //\n\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyDistortion = new Tone.Distortion(melodySettings.distortion);\n      melodyFreeverb = new Tone.Freeverb(melodySettings.freeverb).toDestination();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay, melodyDistortion, melodyFreeverb);\n      var melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true; //\n      //\n\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: '00001-Linn-9000-BassDrumrum1.mp3',\n          A2: '00017-Linn-9000-Snare.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/' // onload: () => {\n        //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n        // }\n\n      });\n      samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination();\n      sampler.chain(samplerChannel);\n      var drumsPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequence.steps).start(0);\n      drumsPart.loopEnd = drumsSettings.sequence.duration;\n      drumsPart.loop = true;\n      Tone.Transport.start();\n    };\n\n    _this.handleBassValueChange = function (property, value) {\n      var bassSettings = _this.state.bassSettings;\n\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'pingPongDelayDelay') {\n        bassPingPongDelay.delayTime.value = value;\n        bassSettings.pingPongDelay.delayTime = value;\n      } else if (property === 'chorusWet') {\n        bassChorus.wet.value = value;\n        bassSettings.chorus.wet = value;\n      } else if (property === 'chorusFrequency') {\n        bassChorus.frecuency.value = value;\n        bassSettings.chorus.frequency = value;\n      } else if (property === 'chorusSpread') {\n        bassChorus.spread = value;\n        bassSettings.chorus.spread = value;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings\n      });\n    };\n\n    _this.handleMelodyValueChange = function (property, value) {\n      var melodySettings = _this.state.melodySettings;\n\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'pingPongDelayDelay') {\n        melodyPingPongDelay.delayTime.value = value;\n        melodySettings.pingPongDelay.delayTime = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      } else if (property === 'chorusFrequency') {\n        melodyChorus.frecuency = value;\n        melodySettings.chorus.frequency = value;\n      } else if (property === 'chorusSpread') {\n        melodyChorus.spread = value;\n        melodySettings.chorus.spread = value;\n      } else if (property === 'distortionWet') {\n        melodyDistortion.wet.value = value;\n        melodySettings.distortion.wet = value;\n      } else if (property === 'distortion') {\n        melodyDistortion.distortion = value;\n        melodySettings.distortion.distortion = value;\n      } else if (property === 'freeverbWet') {\n        melodyFreeverb.wet.value = value;\n        melodySettings.freeverb.wet = value;\n      }\n\n      _this.setState({\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleDrumsValueChange = function (property, value) {\n      var drumsSettings = _this.state.drumsSettings;\n\n      if (property === 'channelVolume') {\n        samplerChannel.volume.value = value;\n        drumsSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        samplerChannel.mute = value;\n        drumsSettings.channel.mute = value;\n      }\n\n      _this.setState({\n        drumsSettings: drumsSettings\n      });\n    };\n\n    _this.state = {\n      bassSettings: bassSettings,\n      melodySettings: melodySettings,\n      drumsSettings: drumsSettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          melodySettings = _this$state2.melodySettings,\n          bassSettings = _this$state2.bassSettings,\n          drumsSettings = _this$state2.drumsSettings;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"play\",\n        handleClick: this.handleStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Synth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SynthName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }, \"Vitamin\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 24\n        }\n      }), \"synth\")), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PingPong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }\n      }, \"Ping Pong\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 26\n        }\n      }), \"delay\"), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: melodySettings.pingPongDelay.wet,\n        property: \"pingPongDelayWet\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Delay\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: melodySettings.pingPongDelay.delayTime,\n        property: \"pingPongDelayDelay\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Chorus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }, \"Chorus\"), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: melodySettings.chorus.wet,\n        property: \"chorusWet\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Frequency\",\n        min: 0,\n        max: 100,\n        step: 0.01,\n        value: melodySettings.chorus.frequency,\n        property: \"chorusFrequency\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Spread\",\n        min: 0,\n        max: 360,\n        step: 1,\n        value: melodySettings.chorus.spread,\n        property: \"chorusSpread\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Distortion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }\n      }, \"Distortion\"), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: melodySettings.distortion.wet,\n        property: \"distortionWet\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"distortion\",\n        min: 0,\n        max: 100,\n        step: 0.01,\n        value: melodySettings.distortion.distortion,\n        property: \"distortion\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Freeverb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }\n      }, \"Freeverb\"), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Freeverb\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: melodySettings.freeverb.wet,\n        property: \"freeverbWet\",\n        handleChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SynthName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }\n      }, \"Mineral\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 24\n        }\n      }), \"synth\")), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"PingPong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }\n      }, \"Ping Pong\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 26\n        }\n      }), \"delay\"), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: bassSettings.pingPongDelay.wet,\n        property: \"pingPongDelayWet\",\n        handleChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Delay\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: bassSettings.pingPongDelay.delayTime,\n        property: \"pingPongDelayDelay\",\n        handleChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Chorus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }\n      }, \"Chorus\"), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: bassSettings.chorus.wet,\n        property: \"chorusWet\",\n        handleChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Frequency\",\n        min: 0,\n        max: 100,\n        step: 0.01,\n        value: bassSettings.chorus.frequency,\n        property: \"chorusFrequency\",\n        handleChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Spread\",\n        min: 0,\n        max: 360,\n        step: 1,\n        value: bassSettings.chorus.spread,\n        property: \"chorusSpread\",\n        handleChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Samples\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Channel, {\n        settings: drumsSettings,\n        handleValueChange: this.handleDrumsValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Channel, {\n        settings: drumsSettings,\n        handleValueChange: this.handleDrumsValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Channel, {\n        settings: drumsSettings,\n        handleValueChange: this.handleDrumsValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","drumsSettings","ToneSynth","Channel","SC_Button","SC_Slider","bassSynth","bassChorus","bassPingPongDelay","melodySynth","melodyChorus","melodyPingPongDelay","melodyDistortion","melodyFreeverb","samplerChannel","Container","props","handleStart","state","Synth","synth","Chorus","chorus","start","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","Distortion","distortion","Freeverb","freeverb","melodyPart","sampler","Sampler","urls","A1","A2","baseUrl","channel","drumsPart","Transport","handleBassValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","wet","delayTime","frecuency","frequency","spread","setState","handleMelodyValueChange","handleDrumsValueChange","volume","mute"],"sources":["/Users/daria/Documents/Generative_Calendar/app/javascript/prototypes/prototype_15/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as melodySettings from './tunes/melody.js'\nimport * as drumsSettings from './tunes/drums.js'\n\nimport ToneSynth from './modules/ToneSynth.jsx'\nimport Channel from './modules/Channel.jsx'\n\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n\nlet bassSynth\nlet bassChorus\nlet bassPingPongDelay\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\nlet melodyDistortion\nlet melodyFreeverb\n\nlet samplerChannel\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bassSettings,\n      melodySettings,\n      drumsSettings\n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassChorus = new Tone.Chorus(bassSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassPingPongDelay)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = true\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n    melodyDistortion = new Tone.Distortion(melodySettings.distortion)\n    melodyFreeverb = new Tone.Freeverb(melodySettings.freeverb).toDestination()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(\n      melodyChorus,\n      melodyPingPongDelay,\n      melodyDistortion,\n      melodyFreeverb\n    )\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n    //\n    //\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: '00001-Linn-9000-BassDrumrum1.mp3',\n        A2: '00017-Linn-9000-Snare.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n      // onload: () => {\n      //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n      // }\n    })\n\n    samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination()\n\n    sampler.chain(samplerChannel)\n\n    const drumsPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequence.steps).start(0)\n\n    drumsPart.loopEnd = drumsSettings.sequence.duration\n    drumsPart.loop = true\n\n    Tone.Transport.start()\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'pingPongDelayDelay') {\n      bassPingPongDelay.delayTime.value = value\n      bassSettings.pingPongDelay.delayTime = value\n    } else if (property === 'chorusWet') {\n      bassChorus.wet.value = value\n      bassSettings.chorus.wet = value\n    } else if (property === 'chorusFrequency') {\n      bassChorus.frecuency.value = value\n      bassSettings.chorus.frequency = value\n    } else if (property === 'chorusSpread') {\n      bassChorus.spread = value\n      bassSettings.chorus.spread = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'pingPongDelayDelay') {\n      melodyPingPongDelay.delayTime.value = value\n      melodySettings.pingPongDelay.delayTime = value\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    } else if (property === 'chorusFrequency') {\n      melodyChorus.frecuency = value\n      melodySettings.chorus.frequency = value\n    } else if (property === 'chorusSpread') {\n      melodyChorus.spread = value\n      melodySettings.chorus.spread = value\n    } else if (property === 'distortionWet') {\n      melodyDistortion.wet.value = value\n      melodySettings.distortion.wet = value\n    } else if (property === 'distortion') {\n      melodyDistortion.distortion = value\n      melodySettings.distortion.distortion = value\n    } else if (property === 'freeverbWet') {\n      melodyFreeverb.wet.value = value\n      melodySettings.freeverb.wet = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  handleDrumsValueChange = (property, value) => {\n    const { drumsSettings } = this.state\n\n    if (property === 'channelVolume') {\n      samplerChannel.volume.value = value\n      drumsSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      samplerChannel.mute = value\n      drumsSettings.channel.mute = value\n    }\n\n    this.setState({\n      drumsSettings\n    })\n  }\n\n  render() {\n    const { melodySettings, bassSettings, drumsSettings } = this.state\n\n    return (\n      <div className=\"Container\">\n        <div className=\"Header\">\n          <SC_Button text=\"play\" handleClick={this.handleStart} />\n        </div>\n        <div className=\"Synth\">\n          <div className=\"Left\">\n            <div className=\"SynthName\">\n              <h1>\n                Vitamin<br></br>synth\n              </h1>\n            </div>\n            <ToneSynth\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n            <div className=\"PingPong\">\n              <h3>\n                Ping Pong<br></br>delay\n              </h3>\n              <SC_Slider\n                name=\"Wet\"\n                min={0}\n                max={1}\n                step={0.01}\n                value={melodySettings.pingPongDelay.wet}\n                property=\"pingPongDelayWet\"\n                handleChange={this.handleMelodyValueChange}\n              />\n              <SC_Slider\n                name=\"Delay\"\n                min={0}\n                max={1}\n                step={0.01}\n                value={melodySettings.pingPongDelay.delayTime}\n                property=\"pingPongDelayDelay\"\n                handleChange={this.handleMelodyValueChange}\n              />\n            </div>\n            <div className=\"Chorus\">\n              <h3>Chorus</h3>\n              <SC_Slider\n                name=\"Wet\"\n                min={0}\n                max={1}\n                step={0.01}\n                value={melodySettings.chorus.wet}\n                property=\"chorusWet\"\n                handleChange={this.handleMelodyValueChange}\n              />\n              <SC_Slider\n                name=\"Frequency\"\n                min={0}\n                max={100}\n                step={0.01}\n                value={melodySettings.chorus.frequency}\n                property=\"chorusFrequency\"\n                handleChange={this.handleMelodyValueChange}\n              />\n              <SC_Slider\n                name=\"Spread\"\n                min={0}\n                max={360}\n                step={1}\n                value={melodySettings.chorus.spread}\n                property=\"chorusSpread\"\n                handleChange={this.handleMelodyValueChange}\n              />\n            </div>\n            <div className=\"Distortion\">\n              <h3>Distortion</h3>\n              <SC_Slider\n                name=\"Wet\"\n                min={0}\n                max={1}\n                step={0.01}\n                value={melodySettings.distortion.wet}\n                property=\"distortionWet\"\n                handleChange={this.handleMelodyValueChange}\n              />\n              <SC_Slider\n                name=\"distortion\"\n                min={0}\n                max={100}\n                step={0.01}\n                value={melodySettings.distortion.distortion}\n                property=\"distortion\"\n                handleChange={this.handleMelodyValueChange}\n              />\n            </div>\n            <div className=\"Freeverb\">\n              <h3>Freeverb</h3>\n              <SC_Slider\n                name=\"Freeverb\"\n                min={0}\n                max={1}\n                step={0.01}\n                value={melodySettings.freeverb.wet}\n                property=\"freeverbWet\"\n                handleChange={this.handleMelodyValueChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"Right\">\n            <div className=\"SynthName\">\n              <h1>\n                Mineral<br></br>synth\n              </h1>\n            </div>\n            <ToneSynth\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n            <div className=\"PingPong\">\n              <h3>\n                Ping Pong<br></br>delay\n              </h3>\n              <SC_Slider\n                name=\"Wet\"\n                min={0}\n                max={1}\n                step={0.01}\n                value={bassSettings.pingPongDelay.wet}\n                property=\"pingPongDelayWet\"\n                handleChange={this.handleBassValueChange}\n              />\n              <SC_Slider\n                name=\"Delay\"\n                min={0}\n                max={1}\n                step={0.01}\n                value={bassSettings.pingPongDelay.delayTime}\n                property=\"pingPongDelayDelay\"\n                handleChange={this.handleBassValueChange}\n              />\n            </div>\n            <div className=\"Chorus\">\n              <h3>Chorus</h3>\n              <SC_Slider\n                name=\"Wet\"\n                min={0}\n                max={1}\n                step={0.01}\n                value={bassSettings.chorus.wet}\n                property=\"chorusWet\"\n                handleChange={this.handleBassValueChange}\n              />\n              <SC_Slider\n                name=\"Frequency\"\n                min={0}\n                max={100}\n                step={0.01}\n                value={bassSettings.chorus.frequency}\n                property=\"chorusFrequency\"\n                handleChange={this.handleBassValueChange}\n              />\n              <SC_Slider\n                name=\"Spread\"\n                min={0}\n                max={360}\n                step={1}\n                value={bassSettings.chorus.spread}\n                property=\"chorusSpread\"\n                handleChange={this.handleBassValueChange}\n              />\n            </div>\n            <div className=\"Samples\">\n              <Channel\n                settings={drumsSettings}\n                handleValueChange={this.handleDrumsValueChange}\n              />\n              <Channel\n                settings={drumsSettings}\n                handleValueChange={this.handleDrumsValueChange}\n              />\n              <Channel\n                settings={drumsSettings}\n                handleValueChange={this.handleDrumsValueChange}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}