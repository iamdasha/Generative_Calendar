{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Documents/MySynth copy/app/javascript/prototypes/prototype_16/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as melodySettings from './tunes/melody.js';\nimport * as drumsSettings from './tunes/drums.js';\nimport ToneSynth from './modules/ToneSynth.jsx';\nimport Channel from './modules/Channel.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nimport SC_Knob from './components/SC_Knob';\nimport Surface from './components/Surface';\nvar bassSynth;\nvar bassChorus;\nvar bassPingPongDelay;\nvar melodySynth;\nvar melodyChorus;\nvar melodyPingPongDelay;\nvar samplerChannel;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          bassSettings = _this$state.bassSettings,\n          melodySettings = _this$state.melodySettings,\n          drumsSettings = _this$state.drumsSettings; //\n      //\n\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassChorus = new Tone.Chorus(bassSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassPingPongDelay);\n      var bassPart = new Tone.Part(function (time, note) {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = bassSettings.sequence.loop; //\n      //\n\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay);\n      var melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = melodySettings.sequence.loop; //\n      //\n\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: '00001-Linn-9000-BassDrumrum1.mp3',\n          A2: '00017-Linn-9000-Snare.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/' // onload: () => {\n        //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n        // }\n\n      });\n      samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination();\n      sampler.chain(samplerChannel);\n      var drumsPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequence.steps).start(0);\n      drumsPart.loopEnd = drumsSettings.sequence.duration;\n      drumsPart.loop = drumsSettings.sequence.loop;\n      Tone.Transport.start();\n\n      _this.setState({\n        isStarted: true\n      });\n    };\n\n    _this.handleValueChange = function (instrumentName, property, value) {\n      var _this$state2 = _this.state,\n          bassSettings = _this$state2.bassSettings,\n          melodySettings = _this$state2.melodySettings;\n      var instrument;\n      var settings;\n\n      if (instrumentName === 'bass') {\n        instrument = bassSynth;\n        settings = bassSettings;\n      } else if (instrumentName === 'melody') {\n        instrument = melodySynth;\n        settings = melodySettings;\n      }\n\n      switch (property) {\n        case 'synthShowEnvelope':\n          settings.synthUI.envelopeShow = value;\n          break;\n\n        case 'synthType':\n          instrument.oscillator.type = value;\n          settings.synth.oscillator.type = value;\n          break;\n\n        case 'synthEnvelopeAttack':\n          instrument.envelope.attack = value;\n          settings.synth.envelope.attack = value;\n          break;\n\n        case 'synthEnvelopeDecay':\n          instrument.envelope.decay = value;\n          settings.synth.envelope.decay = value;\n          break;\n\n        case 'synthEnvelopeSustain':\n          instrument.envelope.sustain = value;\n          settings.synth.envelope.sustain = value;\n          break;\n\n        case 'synthEnvelopeRelease':\n          instrument.envelope.release = value;\n          settings.synth.envelope.release = value;\n          break;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings,\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleBassValueChange = function (property, value) {\n      var bassSettings = _this.state.bassSettings;\n\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        bassChorus.wet.value = value;\n        bassSettings.chorus.wet = value;\n      } else if (property === 'synthShowEnvelope') {\n        console.log(bassSettings, bassSettings.synthUI, value);\n        bassSettings.synthUI.envelopeShow = value;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings\n      });\n    };\n\n    _this.handleMelodyValueChange = function (property, value) {\n      var melodySettings = _this.state.melodySettings;\n\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'delaySurface') {\n        console.log(value.x, value.y);\n        melodyPingPongDelay.delayTime.value = value.x;\n        melodySettings.pingPongDelay.delayTime = value.x;\n        melodyPingPongDelay.maxDelayTime = value.y;\n        melodySettings.pingPongDelay.maxDelayTime = value.y;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      } else if (property === 'melodyChorusSpread') {\n        melodyChorus.spread = value;\n        melodySettings.chorus.spread = value;\n      } else if (property === 'synthShowEnvelope') {\n        melodySettings.synthUI.envelopeShow = value;\n      }\n\n      _this.setState({\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleDrumsValueChange = function (property, value) {\n      var drumsSettings = _this.state.drumsSettings;\n\n      if (property === 'channelVolume') {\n        samplerChannel.volume.value = value;\n        drumsSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        console.log('=====BEFORE=====', drumsSettings.channel.mute, samplerChannel.mute, drumsSettings.channel.mute, samplerChannel);\n        var mute = !drumsSettings.channel.mute;\n        samplerChannel.mute = mute;\n        drumsSettings.channel.mute = mute;\n        console.log('=====AFTER=====', mute, samplerChannel.mute, drumsSettings.channel.mute, samplerChannel);\n      } else if (property === 'channelPan') {\n        samplerChannel.pan.value = value;\n        drumsSettings.channel.pan = value;\n      }\n\n      _this.setState({\n        drumsSettings: drumsSettings\n      });\n    };\n\n    _this.handleToggleUIShow = function () {\n      var isUIShown = _this.state.isUIShown;\n\n      _this.setState({\n        isUIShown: !isUIShown\n      });\n    };\n\n    _this.renderStartButton = function () {\n      return /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Art Design & Coding Community\",\n        handleClick: _this.handleStart,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.renderShowHideButton = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggleUIButton\",\n        onClick: _this.handleToggleUIShow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 7\n        }\n      }, \"Show/Hide UI\");\n    };\n\n    _this.renderUI = function () {\n      var _this$state3 = _this.state,\n          bassSettings = _this$state3.bassSettings,\n          melodySettings = _this$state3.melodySettings,\n          drumsSettings = _this$state3.drumsSettings;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"instrumentUI\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToneSynth, {\n        instrumentName: \"bass\",\n        settings: bassSettings,\n        handleValueChange: _this.handleValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ToneSynth, {\n        instrumentName: \"melody\",\n        settings: melodySettings,\n        handleValueChange: _this.handleValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Surface, {\n        minX: \"0\",\n        maxX: \"1\",\n        stepX: \"0.01\",\n        valueX: melodySettings.pingPongDelay.delayTime,\n        minY: \"0\",\n        maxY: \"1\",\n        stepY: \"0.01\",\n        valueY: melodySettings.pingPongDelay.maxDelayTime,\n        handleValueChange: _this.handleMelodyValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Delay Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: bassSettings.pingPongDelay.wet,\n        property: \"pingPongDelayWet\",\n        handleChange: _this.handleDrumsValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Chorus Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: bassSettings.chorus.wet,\n        property: \"chorusWet\",\n        handleChange: _this.handleDrumsValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Channel, {\n        settings: drumsSettings,\n        handleValueChange: _this.handleDrumsValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_Knob, {\n        name: \"Melody Chorus Spread\",\n        min: 0,\n        max: 360,\n        value: 180,\n        property: \"melodyChorusSpread\",\n        handleChange: _this.handleMelodyValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.state = {\n      isStarted: false,\n      isUIShown: true,\n      bassSettings: bassSettings,\n      melodySettings: melodySettings,\n      drumsSettings: drumsSettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          isStarted = _this$state4.isStarted,\n          isUIShown = _this$state4.isUIShown;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 7\n        }\n      }, isStarted ? this.renderShowHideButton() : this.renderStartButton(), isUIShown ? this.renderUI() : '');\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","drumsSettings","ToneSynth","Channel","SC_Button","SC_Slider","SC_Knob","Surface","bassSynth","bassChorus","bassPingPongDelay","melodySynth","melodyChorus","melodyPingPongDelay","samplerChannel","Container","props","handleStart","state","Synth","synth","Chorus","chorus","start","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","melodyPart","sampler","Sampler","urls","A1","A2","baseUrl","channel","drumsPart","Transport","setState","isStarted","handleValueChange","instrumentName","property","value","instrument","settings","synthUI","envelopeShow","oscillator","type","envelope","attack","decay","sustain","release","handleBassValueChange","wet","console","log","handleMelodyValueChange","x","y","delayTime","maxDelayTime","spread","handleDrumsValueChange","volume","mute","pan","handleToggleUIShow","isUIShown","renderStartButton","renderShowHideButton","renderUI"],"sources":["/Users/daria/Documents/MySynth copy/app/javascript/prototypes/prototype_16/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as melodySettings from './tunes/melody.js'\nimport * as drumsSettings from './tunes/drums.js'\n\nimport ToneSynth from './modules/ToneSynth.jsx'\nimport Channel from './modules/Channel.jsx'\n\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\nimport SC_Knob from './components/SC_Knob'\nimport Surface from './components/Surface'\n\nlet bassSynth\nlet bassChorus\nlet bassPingPongDelay\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\n\nlet samplerChannel\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isStarted: false,\n      isUIShown: true,\n      bassSettings,\n      melodySettings,\n      drumsSettings\n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassChorus = new Tone.Chorus(bassSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassPingPongDelay)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = bassSettings.sequence.loop\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = melodySettings.sequence.loop\n    //\n    //\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: '00001-Linn-9000-BassDrumrum1.mp3',\n        A2: '00017-Linn-9000-Snare.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n      // onload: () => {\n      //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n      // }\n    })\n\n    samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination()\n\n    sampler.chain(samplerChannel)\n\n    const drumsPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequence.steps).start(0)\n\n    drumsPart.loopEnd = drumsSettings.sequence.duration\n    drumsPart.loop = drumsSettings.sequence.loop\n\n    Tone.Transport.start()\n\n    this.setState({\n      isStarted: true\n    })\n  }\n\n  handleValueChange = (instrumentName, property, value) => {\n    const { bassSettings, melodySettings } = this.state\n\n    let instrument\n    let settings\n\n    if (instrumentName === 'bass') {\n      instrument = bassSynth\n      settings = bassSettings\n    } else if (instrumentName === 'melody') {\n      instrument = melodySynth\n      settings = melodySettings\n    }\n\n    switch (property) {\n      case 'synthShowEnvelope':\n        settings.synthUI.envelopeShow = value\n        break\n      case 'synthType':\n        instrument.oscillator.type = value\n        settings.synth.oscillator.type = value\n        break\n      case 'synthEnvelopeAttack':\n        instrument.envelope.attack = value\n        settings.synth.envelope.attack = value\n        break\n      case 'synthEnvelopeDecay':\n        instrument.envelope.decay = value\n        settings.synth.envelope.decay = value\n        break\n      case 'synthEnvelopeSustain':\n        instrument.envelope.sustain = value\n        settings.synth.envelope.sustain = value\n        break\n      case 'synthEnvelopeRelease':\n        instrument.envelope.release = value\n        settings.synth.envelope.release = value\n        break\n    }\n\n    this.setState({\n      bassSettings,\n      melodySettings\n    })\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      bassChorus.wet.value = value\n      bassSettings.chorus.wet = value\n    } else if (property === 'synthShowEnvelope') {\n      console.log(bassSettings, bassSettings.synthUI, value)\n      bassSettings.synthUI.envelopeShow = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'delaySurface') {\n      console.log(value.x, value.y)\n      melodyPingPongDelay.delayTime.value = value.x\n      melodySettings.pingPongDelay.delayTime = value.x\n      melodyPingPongDelay.maxDelayTime = value.y\n      melodySettings.pingPongDelay.maxDelayTime = value.y\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    } else if (property === 'melodyChorusSpread') {\n      melodyChorus.spread = value\n      melodySettings.chorus.spread = value\n    } else if (property === 'synthShowEnvelope') {\n      melodySettings.synthUI.envelopeShow = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  handleDrumsValueChange = (property, value) => {\n    const { drumsSettings } = this.state\n\n    if (property === 'channelVolume') {\n      samplerChannel.volume.value = value\n      drumsSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      console.log(\n        '=====BEFORE=====',\n        drumsSettings.channel.mute,\n        samplerChannel.mute,\n        drumsSettings.channel.mute,\n        samplerChannel\n      )\n\n      const mute = !drumsSettings.channel.mute\n      samplerChannel.mute = mute\n      drumsSettings.channel.mute = mute\n\n      console.log(\n        '=====AFTER=====',\n        mute,\n        samplerChannel.mute,\n        drumsSettings.channel.mute,\n        samplerChannel\n      )\n    } else if (property === 'channelPan') {\n      samplerChannel.pan.value = value\n      drumsSettings.channel.pan = value\n    }\n\n    this.setState({\n      drumsSettings\n    })\n  }\n\n  handleToggleUIShow = () => {\n    const { isUIShown } = this.state\n\n    this.setState({\n      isUIShown: !isUIShown\n    })\n  }\n\n  renderStartButton = () => {\n    return (\n      <SC_Button\n        text=\"Art Design & Coding Community\"\n        handleClick={this.handleStart}\n      />\n    )\n  }\n\n  renderShowHideButton = () => {\n    return (\n      <div className=\"toggleUIButton\" onClick={this.handleToggleUIShow}>\n        Show/Hide UI\n      </div>\n    )\n  }\n\n  renderUI = () => {\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n\n    return (\n      <div className=\"instrumentUI\">\n        <ToneSynth\n          instrumentName=\"bass\"\n          settings={bassSettings}\n          handleValueChange={this.handleValueChange}\n        />\n\n        <ToneSynth\n          instrumentName=\"melody\"\n          settings={melodySettings}\n          handleValueChange={this.handleValueChange}\n        />\n\n        <Surface\n          minX=\"0\"\n          maxX=\"1\"\n          stepX=\"0.01\"\n          valueX={melodySettings.pingPongDelay.delayTime}\n          minY=\"0\"\n          maxY=\"1\"\n          stepY=\"0.01\"\n          valueY={melodySettings.pingPongDelay.maxDelayTime}\n          handleValueChange={this.handleMelodyValueChange}\n        />\n\n        <SC_Slider\n          name=\"Delay Wet\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={bassSettings.pingPongDelay.wet}\n          property=\"pingPongDelayWet\"\n          handleChange={this.handleDrumsValueChange}\n        />\n\n        <SC_Slider\n          name=\"Chorus Wet\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={bassSettings.chorus.wet}\n          property=\"chorusWet\"\n          handleChange={this.handleDrumsValueChange}\n        />\n\n        <Channel\n          settings={drumsSettings}\n          handleValueChange={this.handleDrumsValueChange}\n        />\n\n        <SC_Knob\n          name=\"Melody Chorus Spread\"\n          min={0}\n          max={360}\n          value={180}\n          property=\"melodyChorusSpread\"\n          handleChange={this.handleMelodyValueChange}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    const { isStarted, isUIShown } = this.state\n\n    return (\n      <div className=\"Container\">\n        {isStarted ? this.renderShowHideButton() : this.renderStartButton()}\n        {isUIShown ? this.renderUI() : ''}\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}