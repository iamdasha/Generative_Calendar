{"ast":null,"code":"// wave gradient\nimport p5 from 'p5';\nimport { sample, getRandomArbitrary } from '../prototypes/utilities';\nvar canvasSize = 600;\nvar elSize = 15;\nvar mag = 400;\nvar amount = 100;\n\nfunction sketch(p) {\n  p.setup = function () {\n    var canvas = p.createCanvas(p.windowWidth, p.windowHeight);\n    canvas.parent('prototype_39');\n    p.noStroke();\n    p.background(0);\n  };\n\n  p.draw = function () {\n    p.translate(p.width / 2, p.height / 2);\n\n    for (var i = 0; i < amount; i++) {\n      var w = p.map(p.sin(p.radians(p.frameCount + i)), -1, 1, -100, 100);\n      var wave1 = p.map(p.cos(p.radians(p.frameCount * 0.8 + i + w)), -1, 1, -100, 100);\n      var wave2 = p.map(p.tan(p.radians(p.frameCount + i)), -1, 1, -mag, mag);\n      var c = p.map(p.sin(p.radians(p.frameCount * 9 + i)), -1, 1, 0, 255);\n      p.fill(c);\n      p.rect(wave1, wave2, elSize, elSize);\n    }\n  };\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  new p5(sketch);\n});","map":{"version":3,"names":["p5","sample","getRandomArbitrary","canvasSize","elSize","mag","amount","sketch","p","setup","canvas","createCanvas","windowWidth","windowHeight","parent","noStroke","background","draw","translate","width","height","i","w","map","sin","radians","frameCount","wave1","cos","wave2","tan","c","fill","rect","document","addEventListener"],"sources":["/Users/daria/Documents/MySynth copy/app/javascript/packs/prototype_39.js"],"sourcesContent":["// wave gradient\n\nimport p5 from 'p5'\nimport { sample, getRandomArbitrary } from '../prototypes/utilities'\n\nconst canvasSize = 600\nconst elSize = 15\nlet mag = 400\nlet amount = 100\n\nfunction sketch(p) {\n  p.setup = () => {\n    const canvas = p.createCanvas(p.windowWidth, p.windowHeight)\n    canvas.parent('prototype_39')\n    p.noStroke()\n    p.background(0)\n  }\n\n  p.draw = () => {\n    p.translate(p.width/2, p.height/2)\n    for (let i = 0; i < amount; i++) {\n      let w = p.map(p.sin(p.radians(p.frameCount + i)), -1, 1, -100, 100)\n      let wave1 = p.map(p.cos(p.radians(p.frameCount * 0.8 + i + w)), -1, 1, -100, 100)\n      let wave2 = p.map(p.tan(p.radians(p.frameCount + i)), -1, 1, -mag, mag)\n      let c = p.map(p.sin(p.radians(p.frameCount * 9 + i)), -1, 1, 0, 255)\n      p.fill(c)\n      p.rect(wave1, wave2, elSize, elSize)\n    }\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new p5(sketch)\n})\n"],"mappings":"AAAA;AAEA,OAAOA,EAAP,MAAe,IAAf;AACA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,yBAA3C;AAEA,IAAMC,UAAU,GAAG,GAAnB;AACA,IAAMC,MAAM,GAAG,EAAf;AACA,IAAIC,GAAG,GAAG,GAAV;AACA,IAAIC,MAAM,GAAG,GAAb;;AAEA,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;EACjBA,CAAC,CAACC,KAAF,GAAU,YAAM;IACd,IAAMC,MAAM,GAAGF,CAAC,CAACG,YAAF,CAAeH,CAAC,CAACI,WAAjB,EAA8BJ,CAAC,CAACK,YAAhC,CAAf;IACAH,MAAM,CAACI,MAAP,CAAc,cAAd;IACAN,CAAC,CAACO,QAAF;IACAP,CAAC,CAACQ,UAAF,CAAa,CAAb;EACD,CALD;;EAOAR,CAAC,CAACS,IAAF,GAAS,YAAM;IACbT,CAAC,CAACU,SAAF,CAAYV,CAAC,CAACW,KAAF,GAAQ,CAApB,EAAuBX,CAAC,CAACY,MAAF,GAAS,CAAhC;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,MAApB,EAA4Be,CAAC,EAA7B,EAAiC;MAC/B,IAAIC,CAAC,GAAGd,CAAC,CAACe,GAAF,CAAMf,CAAC,CAACgB,GAAF,CAAMhB,CAAC,CAACiB,OAAF,CAAUjB,CAAC,CAACkB,UAAF,GAAeL,CAAzB,CAAN,CAAN,EAA0C,CAAC,CAA3C,EAA8C,CAA9C,EAAiD,CAAC,GAAlD,EAAuD,GAAvD,CAAR;MACA,IAAIM,KAAK,GAAGnB,CAAC,CAACe,GAAF,CAAMf,CAAC,CAACoB,GAAF,CAAMpB,CAAC,CAACiB,OAAF,CAAUjB,CAAC,CAACkB,UAAF,GAAe,GAAf,GAAqBL,CAArB,GAAyBC,CAAnC,CAAN,CAAN,EAAoD,CAAC,CAArD,EAAwD,CAAxD,EAA2D,CAAC,GAA5D,EAAiE,GAAjE,CAAZ;MACA,IAAIO,KAAK,GAAGrB,CAAC,CAACe,GAAF,CAAMf,CAAC,CAACsB,GAAF,CAAMtB,CAAC,CAACiB,OAAF,CAAUjB,CAAC,CAACkB,UAAF,GAAeL,CAAzB,CAAN,CAAN,EAA0C,CAAC,CAA3C,EAA8C,CAA9C,EAAiD,CAAChB,GAAlD,EAAuDA,GAAvD,CAAZ;MACA,IAAI0B,CAAC,GAAGvB,CAAC,CAACe,GAAF,CAAMf,CAAC,CAACgB,GAAF,CAAMhB,CAAC,CAACiB,OAAF,CAAUjB,CAAC,CAACkB,UAAF,GAAe,CAAf,GAAmBL,CAA7B,CAAN,CAAN,EAA8C,CAAC,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,GAAxD,CAAR;MACAb,CAAC,CAACwB,IAAF,CAAOD,CAAP;MACAvB,CAAC,CAACyB,IAAF,CAAON,KAAP,EAAcE,KAAd,EAAqBzB,MAArB,EAA6BA,MAA7B;IACD;EACF,CAVD;AAWD;;AAED8B,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;EAClD,IAAInC,EAAJ,CAAOO,MAAP;AACD,CAFD"},"metadata":{},"sourceType":"module"}