{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Documents/MySynth copy/app/javascript/prototypes/prototype_18/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as melodySettings from './tunes/melody.js';\nimport * as drumsSettings from './tunes/drums.js';\nimport ToneSynth from './modules/ToneSynth.jsx';\nimport PingPongDelayEffect from './modules/PingPongDelayEffect.jsx';\nimport ChorusEffect from './modules/ChorusEffect.jsx';\nimport Channel from './modules/Channel.jsx';\nimport SC_ToggleButtonSet from './components/SC_ToggleButtonSet';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nimport SC_Knob from './components/SC_Knob';\nimport Surface from './components/Surface';\nvar bassSynth;\nvar bassChorus;\nvar bassPingPongDelay;\nvar bassPart;\nvar melodyPart;\nvar melodySynth;\nvar melodyChorus;\nvar melodyPingPongDelay;\nvar samplerChannel;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleKeydown = function (e) {\n      console.log(e.key, e.code, e.keyCode);\n    };\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          bassSettings = _this$state.bassSettings,\n          melodySettings = _this$state.melodySettings,\n          drumsSettings = _this$state.drumsSettings; //\n      //\n\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassChorus = new Tone.Chorus(bassSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassPingPongDelay);\n      bassPart = new Tone.Part(function (time, note) {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps1).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = bassSettings.sequence.loop; //\n      //\n\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay);\n      melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps1).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = melodySettings.sequence.loop; //\n      //\n\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: '00001-Linn-9000-BassDrumrum1.mp3',\n          A2: '00017-Linn-9000-Snare.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/' // onload: () => {\n        //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n        // }\n\n      });\n      samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination();\n      sampler.chain(samplerChannel);\n      var drumsPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequence.steps).start(0);\n      drumsPart.loopEnd = drumsSettings.sequence.duration;\n      drumsPart.loop = drumsSettings.sequence.loop;\n      Tone.Transport.start();\n      Tone.Transport.scheduleRepeat(_this.nextMeasure, '1m');\n\n      _this.setState({\n        isStarted: true\n      });\n    };\n\n    _this.handleValueChange = function (instrumentName, property, value) {\n      var _this$state2 = _this.state,\n          bassSettings = _this$state2.bassSettings,\n          melodySettings = _this$state2.melodySettings;\n      var instrument;\n      var pingPongDelay;\n      var chorus;\n      var settings;\n\n      if (instrumentName === 'bass') {\n        instrument = bassSynth;\n        pingPongDelay = bassPingPongDelay;\n        chorus = bassChorus;\n        settings = bassSettings;\n      } else if (instrumentName === 'melody') {\n        instrument = melodySynth;\n        pingPongDelay = melodyPingPongDelay;\n        chorus = melodyChorus;\n        settings = melodySettings;\n      }\n\n      switch (property) {\n        case 'synthType':\n          instrument.oscillator.type = value;\n          settings.synth.oscillator.type = value;\n          break;\n\n        case 'synthShowEnvelope':\n          settings.synthUI.envelopeShow = value;\n          break;\n\n        case 'synthEnvelopeAttack':\n          instrument.envelope.attack = value;\n          settings.synth.envelope.attack = value;\n          break;\n\n        case 'synthEnvelopeDecay':\n          instrument.envelope.decay = value;\n          settings.synth.envelope.decay = value;\n          break;\n\n        case 'synthEnvelopeSustain':\n          instrument.envelope.sustain = value;\n          settings.synth.envelope.sustain = value;\n          break;\n\n        case 'synthEnvelopeRelease':\n          instrument.envelope.release = value;\n          settings.synth.envelope.release = value;\n          break;\n\n        case 'pingPongDelayWet':\n          pingPongDelay.wet.value = value;\n          settings.pingPongDelay.wet = value;\n          break;\n\n        case 'pingPongDelayDelayTime':\n          pingPongDelay.delayTime.value = value;\n          settings.pingPongDelay.delayTime = value;\n          break;\n\n        case 'pingPongDelayMaxDelayTime':\n          pingPongDelay.maxDelayTime = value;\n          settings.pingPongDelay.maxDelayTime = value;\n          break;\n\n        case 'chorusWet':\n          chorus.wet.value = value;\n          settings.chorus.wet = value;\n          break;\n\n        case 'chorusType':\n          chorus.type = value;\n          settings.chorus.type = value;\n          break;\n\n        case 'chorusFrequency':\n          chorus.frequency.value = value;\n          settings.chorus.frequency = value;\n          break;\n\n        case 'chorusDelayTime':\n          chorus.delayTime = value;\n          settings.chorus.delayTime = value;\n          break;\n\n        case 'chorusDepth':\n          chorus.depth = value;\n          settings.chorus.depth = value;\n          break;\n\n        case 'chorusSpread':\n          chorus.spread = value;\n          settings.chorus.spread = value;\n          break;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings,\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleMelodySequenceChange = function (property, value) {\n      var steps;\n\n      if (value == 'steps1') {\n        steps = bassSettings.sequence.steps1;\n      } else if (value == 'steps1') {\n        steps = bassSettings.sequence.steps2;\n      }\n\n      melodyPart.clear();\n      steps.forEach(function (step, i) {\n        melodyPart.add(step);\n      });\n    };\n\n    _this.handleDrumsValueChange = function (property, value) {\n      var drumsSettings = _this.state.drumsSettings;\n\n      if (property === 'channelVolume') {\n        samplerChannel.volume.value = value;\n        drumsSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        console.log('=====BEFORE=====', drumsSettings.channel.mute, samplerChannel.mute, drumsSettings.channel.mute, samplerChannel);\n        var mute = !drumsSettings.channel.mute;\n        samplerChannel.mute = mute;\n        drumsSettings.channel.mute = mute;\n        console.log('=====AFTER=====', mute, samplerChannel.mute, drumsSettings.channel.mute, samplerChannel);\n      } else if (property === 'channelPan') {\n        samplerChannel.pan.value = value;\n        drumsSettings.channel.pan = value;\n      }\n\n      _this.setState({\n        drumsSettings: drumsSettings\n      });\n    };\n\n    _this.handleToggleUIShow = function () {\n      var isUIShown = _this.state.isUIShown;\n\n      _this.setState({\n        isUIShown: !isUIShown\n      });\n    };\n\n    _this.renderStartButton = function () {\n      return /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Art Design & Coding Community\",\n        handleClick: _this.handleStart,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.renderShowHideButton = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggleUIButton\",\n        onClick: _this.handleToggleUIShow,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 7\n        }\n      }, \"Show/Hide UI\");\n    };\n\n    _this.renderUI = function () {\n      var _this$state3 = _this.state,\n          bassSettings = _this$state3.bassSettings,\n          melodySettings = _this$state3.melodySettings,\n          drumsSettings = _this$state3.drumsSettings;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"instrumentUI\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToneSynth, {\n        instrumentName: \"bass\",\n        settings: bassSettings,\n        handleValueChange: _this.handleValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(PingPongDelayEffect, {\n        instrumentName: \"bass\",\n        settings: bassSettings,\n        handleValueChange: _this.handleValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ChorusEffect, {\n        instrumentName: \"bass\",\n        settings: bassSettings,\n        handleValueChange: _this.handleValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ToneSynth, {\n        instrumentName: \"melody\",\n        settings: melodySettings,\n        handleValueChange: _this.handleValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(SC_ToggleButtonSet, {\n        name: \"Sequence\",\n        options: ['steps1', 'steps2'],\n        value: \"\",\n        property: \"melodySequence\",\n        handleChange: _this.handleMelodySequenceChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(PingPongDelayEffect, {\n        instrumentName: \"melody\",\n        settings: melodySettings,\n        handleValueChange: _this.handleValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ChorusEffect, {\n        instrumentName: \"melody\",\n        settings: melodySettings,\n        handleValueChange: _this.handleValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Channel, {\n        settings: drumsSettings,\n        handleValueChange: _this.handleDrumsValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    _this.state = {\n      isStarted: false,\n      isUIShown: true,\n      bassSettings: bassSettings,\n      melodySettings: melodySettings,\n      drumsSettings: drumsSettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('keydown', this.handleKeydown);\n    }\n  }, {\n    key: \"nextMeasure\",\n    value: function nextMeasure() {\n      var position = Tone.Transport.position;\n      var regexBefore = /([\\w]+)/;\n      var measure = position.match(regexBefore)[1];\n      console.log('next measure', measure);\n\n      if (measure == 4) {\n        console.log('measure 3');\n        bassPart.clear();\n        bassSettings.sequence.steps2.forEach(function (step, i) {\n          bassPart.add(step);\n        });\n      } else if (measure == 8) {\n        console.log('measure 7');\n        bassPart.clear();\n        bassSettings.sequence.steps1.forEach(function (step, i) {\n          bassPart.add(step);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          isStarted = _this$state4.isStarted,\n          isUIShown = _this$state4.isUIShown;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 7\n        }\n      }, isStarted ? this.renderShowHideButton() : this.renderStartButton(), isUIShown ? this.renderUI() : '');\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","drumsSettings","ToneSynth","PingPongDelayEffect","ChorusEffect","Channel","SC_ToggleButtonSet","SC_Button","SC_Slider","SC_Knob","Surface","bassSynth","bassChorus","bassPingPongDelay","bassPart","melodyPart","melodySynth","melodyChorus","melodyPingPongDelay","samplerChannel","Container","props","handleKeydown","e","console","log","key","code","keyCode","handleStart","state","Synth","synth","Chorus","chorus","start","PingPongDelay","pingPongDelay","toDestination","chain","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps1","loopEnd","loop","sampler","Sampler","urls","A1","A2","baseUrl","channel","drumsPart","steps","Transport","scheduleRepeat","nextMeasure","setState","isStarted","handleValueChange","instrumentName","property","value","instrument","settings","oscillator","type","synthUI","envelopeShow","envelope","attack","decay","sustain","release","wet","delayTime","maxDelayTime","frequency","depth","spread","handleMelodySequenceChange","steps2","clear","forEach","step","i","add","handleDrumsValueChange","volume","mute","pan","handleToggleUIShow","isUIShown","renderStartButton","renderShowHideButton","renderUI","document","addEventListener","position","regexBefore","measure","match"],"sources":["/Users/daria/Documents/MySynth copy/app/javascript/prototypes/prototype_18/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as melodySettings from './tunes/melody.js'\nimport * as drumsSettings from './tunes/drums.js'\n\nimport ToneSynth from './modules/ToneSynth.jsx'\nimport PingPongDelayEffect from './modules/PingPongDelayEffect.jsx'\nimport ChorusEffect from './modules/ChorusEffect.jsx'\nimport Channel from './modules/Channel.jsx'\n\nimport SC_ToggleButtonSet from './components/SC_ToggleButtonSet'\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\nimport SC_Knob from './components/SC_Knob'\nimport Surface from './components/Surface'\n\nlet bassSynth\nlet bassChorus\nlet bassPingPongDelay\nlet bassPart\nlet melodyPart\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\n\nlet samplerChannel\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isStarted: false,\n      isUIShown: true,\n      bassSettings,\n      melodySettings,\n      drumsSettings\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeydown)\n  }\n\n  handleKeydown = (e) => {\n    console.log(e.key, e.code, e.keyCode)\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassChorus = new Tone.Chorus(bassSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassPingPongDelay)\n\n    bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps1).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = bassSettings.sequence.loop\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay)\n\n    melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps1).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = melodySettings.sequence.loop\n    //\n    //\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: '00001-Linn-9000-BassDrumrum1.mp3',\n        A2: '00017-Linn-9000-Snare.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n      // onload: () => {\n      //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n      // }\n    })\n\n    samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination()\n\n    sampler.chain(samplerChannel)\n\n    const drumsPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequence.steps).start(0)\n\n    drumsPart.loopEnd = drumsSettings.sequence.duration\n    drumsPart.loop = drumsSettings.sequence.loop\n\n    Tone.Transport.start()\n    Tone.Transport.scheduleRepeat(this.nextMeasure, '1m')\n\n    this.setState({\n      isStarted: true\n    })\n  }\n\n  nextMeasure() {\n    const position = Tone.Transport.position\n    const regexBefore = /([\\w]+)/\n    let measure = position.match(regexBefore)[1]\n\n    console.log('next measure', measure)\n\n    if (measure == 4) {\n      console.log('measure 3')\n      bassPart.clear()\n      bassSettings.sequence.steps2.forEach((step, i) => {\n        bassPart.add(step)\n      })\n    } else if (measure == 8) {\n      console.log('measure 7')\n      bassPart.clear()\n      bassSettings.sequence.steps1.forEach((step, i) => {\n        bassPart.add(step)\n      })\n    }\n  }\n\n  handleValueChange = (instrumentName, property, value) => {\n    const { bassSettings, melodySettings } = this.state\n\n    let instrument\n    let pingPongDelay\n    let chorus\n    let settings\n\n    if (instrumentName === 'bass') {\n      instrument = bassSynth\n      pingPongDelay = bassPingPongDelay\n      chorus = bassChorus\n      settings = bassSettings\n    } else if (instrumentName === 'melody') {\n      instrument = melodySynth\n      pingPongDelay = melodyPingPongDelay\n      chorus = melodyChorus\n      settings = melodySettings\n    }\n\n    switch (property) {\n      case 'synthType':\n        instrument.oscillator.type = value\n        settings.synth.oscillator.type = value\n        break\n      case 'synthShowEnvelope':\n        settings.synthUI.envelopeShow = value\n        break\n      case 'synthEnvelopeAttack':\n        instrument.envelope.attack = value\n        settings.synth.envelope.attack = value\n        break\n      case 'synthEnvelopeDecay':\n        instrument.envelope.decay = value\n        settings.synth.envelope.decay = value\n        break\n      case 'synthEnvelopeSustain':\n        instrument.envelope.sustain = value\n        settings.synth.envelope.sustain = value\n        break\n      case 'synthEnvelopeRelease':\n        instrument.envelope.release = value\n        settings.synth.envelope.release = value\n        break\n      case 'pingPongDelayWet':\n        pingPongDelay.wet.value = value\n        settings.pingPongDelay.wet = value\n        break\n      case 'pingPongDelayDelayTime':\n        pingPongDelay.delayTime.value = value\n        settings.pingPongDelay.delayTime = value\n        break\n      case 'pingPongDelayMaxDelayTime':\n        pingPongDelay.maxDelayTime = value\n        settings.pingPongDelay.maxDelayTime = value\n        break\n      case 'chorusWet':\n        chorus.wet.value = value\n        settings.chorus.wet = value\n        break\n      case 'chorusType':\n        chorus.type = value\n        settings.chorus.type = value\n        break\n      case 'chorusFrequency':\n        chorus.frequency.value = value\n        settings.chorus.frequency = value\n        break\n      case 'chorusDelayTime':\n        chorus.delayTime = value\n        settings.chorus.delayTime = value\n        break\n      case 'chorusDepth':\n        chorus.depth = value\n        settings.chorus.depth = value\n        break\n      case 'chorusSpread':\n        chorus.spread = value\n        settings.chorus.spread = value\n        break\n    }\n\n    this.setState({\n      bassSettings,\n      melodySettings\n    })\n  }\n\n  handleMelodySequenceChange = (property, value) => {\n    let steps\n\n    if (value == 'steps1') {\n      steps = bassSettings.sequence.steps1\n    } else if (value == 'steps1') {\n      steps = bassSettings.sequence.steps2\n    }\n    melodyPart.clear()\n    steps.forEach((step, i) => {\n      melodyPart.add(step)\n    })\n  }\n\n  handleDrumsValueChange = (property, value) => {\n    const { drumsSettings } = this.state\n\n    if (property === 'channelVolume') {\n      samplerChannel.volume.value = value\n      drumsSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      console.log(\n        '=====BEFORE=====',\n        drumsSettings.channel.mute,\n        samplerChannel.mute,\n        drumsSettings.channel.mute,\n        samplerChannel\n      )\n\n      const mute = !drumsSettings.channel.mute\n      samplerChannel.mute = mute\n      drumsSettings.channel.mute = mute\n\n      console.log(\n        '=====AFTER=====',\n        mute,\n        samplerChannel.mute,\n        drumsSettings.channel.mute,\n        samplerChannel\n      )\n    } else if (property === 'channelPan') {\n      samplerChannel.pan.value = value\n      drumsSettings.channel.pan = value\n    }\n\n    this.setState({\n      drumsSettings\n    })\n  }\n\n  handleToggleUIShow = () => {\n    const { isUIShown } = this.state\n\n    this.setState({\n      isUIShown: !isUIShown\n    })\n  }\n\n  renderStartButton = () => {\n    return (\n      <SC_Button\n        text=\"Art Design & Coding Community\"\n        handleClick={this.handleStart}\n      />\n    )\n  }\n\n  renderShowHideButton = () => {\n    return (\n      <div className=\"toggleUIButton\" onClick={this.handleToggleUIShow}>\n        Show/Hide UI\n      </div>\n    )\n  }\n\n  renderUI = () => {\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n\n    return (\n      <div className=\"instrumentUI\">\n        <ToneSynth\n          instrumentName=\"bass\"\n          settings={bassSettings}\n          handleValueChange={this.handleValueChange}\n        />\n\n        <PingPongDelayEffect\n          instrumentName=\"bass\"\n          settings={bassSettings}\n          handleValueChange={this.handleValueChange}\n        />\n\n        <ChorusEffect\n          instrumentName=\"bass\"\n          settings={bassSettings}\n          handleValueChange={this.handleValueChange}\n        />\n\n        <ToneSynth\n          instrumentName=\"melody\"\n          settings={melodySettings}\n          handleValueChange={this.handleValueChange}\n        />\n\n        <br />\n\n        <SC_ToggleButtonSet\n          name=\"Sequence\"\n          options={['steps1', 'steps2']}\n          value=\"\"\n          property=\"melodySequence\"\n          handleChange={this.handleMelodySequenceChange}\n        />\n\n        <PingPongDelayEffect\n          instrumentName=\"melody\"\n          settings={melodySettings}\n          handleValueChange={this.handleValueChange}\n        />\n\n        <ChorusEffect\n          instrumentName=\"melody\"\n          settings={melodySettings}\n          handleValueChange={this.handleValueChange}\n        />\n\n        <Channel\n          settings={drumsSettings}\n          handleValueChange={this.handleDrumsValueChange}\n        />\n      </div>\n    )\n  }\n\n  render() {\n    const { isStarted, isUIShown } = this.state\n\n    return (\n      <div className=\"Container\">\n        {isStarted ? this.renderShowHideButton() : this.renderStartButton()}\n        {isUIShown ? this.renderUI() : ''}\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}